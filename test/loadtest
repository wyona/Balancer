#!/usr/bin/ruby

require 'net/http'
require 'thread'

def usage
  puts "usage: loadtest <ipaddr>:<port> <url> <threads> <requests> "
  exit
end

if ARGV.size != 4
  usage
end

patt = ARGV[0].split(":")
if patt.size != 2
  usage
end

ipaddr = patt[0]
port = patt[1].to_i
url = ARGV[1]
threads = ARGV[2].to_i
requests = ARGV[3].to_i

runners = []
mutex = Mutex.new
count = 0
rcv = 0
oldcount = 0
time = Time.new.to_i
newtime = time
stat = true

$avgtab = []

(0..threads).each { |num|
	runners << Thread.new {
		(0..requests).each { |i|
			h = Net::HTTP.new(ipaddr, port)
			resp, data = h.get(url, nil )
			mutex.synchronize do
				count += 1
                rcv += data.size
			end
		}
	}
}

statt = Thread.new {
	while stat == true
		sleep 1
		mutex.synchronize do
			newtime = Time.new.to_i
			td = newtime - time
			cd = count - oldcount
			rs = cd/td
			$avgtab << rs
			puts "#{rs} requests/second - r:#{rcv} bytes"
			oldcount = count
			time = newtime
		end
	end
}

runners.each { |runner|
	runner.join
}

stat = false
statt.join

avgsum = 0
$avgtab.each { |avg|
	avgsum += avg
}

aavg = avgsum / $avgtab.size

puts "average over #{$avgtab.size} measurments: #{aavg} requests/second - #{rcv/$avgtab.size} kbytes/second"

